[
    {
        "id": "6e87fc31ef962622",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "53eb00862ba1e3e8",
        "type": "mqtt in",
        "z": "6e87fc31ef962622",
        "name": "",
        "topic": "/smoke_detectorID",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e6083bc44b840387",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 90,
        "y": 320,
        "wires": [
            [
                "5f2de4819e26a415"
            ]
        ]
    },
    {
        "id": "84adb2b29e5d34cb",
        "type": "debug",
        "z": "6e87fc31ef962622",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 240,
        "wires": []
    },
    {
        "id": "5f2de4819e26a415",
        "type": "function",
        "z": "6e87fc31ef962622",
        "name": "Check Smoke Level",
        "func": "var level = parseInt(msg.payload);\nif (parseInt(msg.payload) > 10) {\n    msg.payload = \"Don't Panic\";\n    return msg;\n}\nreturn null; // donâ€™t forward anything if level is safe\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 320,
        "wires": [
            [
                "84adb2b29e5d34cb",
                "9c1f4ca8b1d427ee"
            ]
        ]
    },
    {
        "id": "9c1f4ca8b1d427ee",
        "type": "mqtt out",
        "z": "6e87fc31ef962622",
        "name": "",
        "topic": "/smoke_alarmID",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e6083bc44b840387",
        "x": 500,
        "y": 400,
        "wires": []
    },
    {
        "id": "httpin1",
        "type": "http in",
        "z": "6e87fc31ef962622",
        "name": "POST /sensor",
        "url": "/sensor",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 140,
        "wires": [
            [
                "json1"
            ]
        ]
    },
    {
        "id": "json1",
        "type": "json",
        "z": "6e87fc31ef962622",
        "name": "parse JSON",
        "pretty": false,
        "x": 250,
        "y": 140,
        "wires": [
            [
                "func1",
                "debug1"
            ]
        ]
    },
    {
        "id": "func1",
        "type": "function",
        "z": "6e87fc31ef962622",
        "name": "threshold check",
        "func": "// msg.payload: { item_id, stock_level, ts }\nconst low = msg.payload && Number(msg.payload.stock_level) < 10;\nmsg.lowStock = !!low;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 140,
        "wires": [
            [
                "switch1"
            ]
        ]
    },
    {
        "id": "switch1",
        "type": "switch",
        "z": "6e87fc31ef962622",
        "name": "lowStock?",
        "property": "lowStock",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 620,
        "y": 140,
        "wires": [
            [
                "tmplLow"
            ],
            [
                "tmplOk"
            ]
        ]
    },
    {
        "id": "tmplLow",
        "type": "template",
        "z": "6e87fc31ef962622",
        "name": "respond (reorder=needed)",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\"status\":\"ok\",\"reorder\":\"needed\"}",
        "output": "str",
        "x": 900,
        "y": 120,
        "wires": [
            [
                "httpresp1"
            ]
        ]
    },
    {
        "id": "tmplOk",
        "type": "template",
        "z": "6e87fc31ef962622",
        "name": "respond (no reorder)",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\"status\":\"ok\",\"reorder\":\"no\"}",
        "output": "str",
        "x": 900,
        "y": 180,
        "wires": [
            [
                "httpresp1"
            ]
        ]
    },
    {
        "id": "httpresp1",
        "type": "http response",
        "z": "6e87fc31ef962622",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1100,
        "y": 140,
        "wires": []
    },
    {
        "id": "debug1",
        "type": "debug",
        "z": "6e87fc31ef962622",
        "name": "see msg",
        "active": true,
        "tosidebar": true,
        "complete": "true",
        "targetType": "full",
        "x": 450,
        "y": 80,
        "wires": []
    },
    {
        "id": "e6083bc44b840387",
        "type": "mqtt-broker",
        "name": "SIT314",
        "broker": "broker.hivemq.com",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    }
]